@page "/recipes"

@inject NavigationManager NavigationManager
@inject IRecipeService RecipeService

@using MauiCookbook.Models
@using MauiCookbook.Services

<h3 class="text-center my-4">Recipes</h3>

<div class="search-box">
    <input type="text" class="form-control mb-3" placeholder="Search recipes..." @bind="@searchQuery" @bind:event="oninput" />
    <select class="form-select mb-3" @bind="selectedMealType">
        <option value="">All Types</option>
        @foreach (var type in Enum.GetValues(typeof(RecipeTypes)))
        {
            <option value="@type">@type</option>
        }
    </select>
</div>

<button class="btn btn-success mb-3" @onclick="NavigateToAddRecipe">
    <i class="bi bi-plus-lg"></i> Add New Recipe
</button>

<div class="container">
    <div class="row">
        @if (recipes == null)
        {
            <p class="text-center">Loading...</p>
        }
        else
        {
            @foreach (var recipe in FilteredRecipes)
            {
                <div class="col-md-4 mb-4">
                    <div class="card h-100 shadow-sm">
                        @* <img class="card-img-top" src="" alt="Recipe Image"> *@
                        <div class="card-body">
                            <h5 class="card-title">@recipe.RecipeName</h5>
                            <p class="card-text">@recipe.Description</p>
                            <p class="text-muted">ID: @recipe.ID</p>

                            <h6>Steps:</h6>
                            @if (recipe.Steps != null && recipe.Steps.Any())
                            {
                                <ul class="list-unstyled">
                                    @foreach (var step in recipe.Steps)
                                    {
                                        <li>@step</li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p>No steps available.</p>
                            }

                            <h6>Ingredients:</h6>
                            @if (recipe.Ingredients != null && recipe.Ingredients.Any())
                            {
                                <ul class="list-unstyled">
                                    @foreach (var ingr in recipe.Ingredients)
                                    {
                                        <li>@ingr.Name (@ingr.Quantity @ingr.Unit)</li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p>No ingredients available.</p>
                            }
                        </div>
                        <div class="card-footer d-flex justify-content-between align-items-center">
                            <small class="text-muted">Cook time: @recipe.CookTime minutes</small>
                            <button class="btn btn-outline-primary btn-sm" @onclick="() => EditRecipe(recipe.ID)">
                                <i class="bi bi-pencil-square"></i> Edit
                            </button>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

@code {
    private List<Recipe> recipes;

    private string searchQuery = "";
    private RecipeTypes selectedMealType = RecipeTypes.Any;

    private IEnumerable<Recipe> FilteredRecipes =>
        recipes.Where(r => (r.RecipeName.Contains(searchQuery, StringComparison.OrdinalIgnoreCase) ||
                            r.Ingredients.Any(i => i.Name.Contains(searchQuery, StringComparison.OrdinalIgnoreCase))) &&
                            (selectedMealType == RecipeTypes.Any || r.RecipeType == selectedMealType));

    protected override async Task OnInitializedAsync()
    {
        try
        {
            recipes = await RecipeService.GetAllRecipesAsync();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"error -----> : {ex.Message}");
            // Optionally, set a flag to display an error message in the UI
        }
    }

    private void NavigateToAddRecipe()
    {
        NavigationManager.NavigateTo("/newrecipe");
    }

    private void EditRecipe(int recipeId)
    {
        NavigationManager.NavigateTo($"/newrecipe/{recipeId}");
    }
}
