@page "/pics"

<h3>DemoPicturesPage</h3>

<button @onclick="PickImage">Pick Image from Gallery</button>
<button @onclick="TakePhoto">Take a New Picture</button>
@if (!string.IsNullOrEmpty(base64Image))
{
    <img src="data:image/png;base64,@base64Image" alt="Selected Image" class="img-fluid" />
}
<button @onclick="SaveImage">Save Image</button>
<button @onclick="LoadImageFromStorage">Load Image</button>

@if (!string.IsNullOrEmpty(base64LoadedImage))
{
    <div>
        <h4>Loaded Image:</h4>
        <img src="data:image/png;base64,@base64LoadedImage" alt="Loaded Image" class="img-fluid" />
    </div>
}

@code {
    private string base64Image;
    private string savedImagePath;
    private string base64LoadedImage;

    private async Task PickImage()
    {
        var result = await MediaPicker.PickPhotoAsync();
        if (result != null)
        {
            using var stream = await result.OpenReadAsync();
            base64Image = await ConvertToBase64(stream);
        }
    }

    private async Task TakePhoto()
    {
        var result = await MediaPicker.CapturePhotoAsync();
        if (result != null)
        {
            using var stream = await result.OpenReadAsync();
            base64Image = await ConvertToBase64(stream);
        }
    }

    private async Task<string> ConvertToBase64(Stream stream)
    {
        using var memoryStream = new MemoryStream();
        await stream.CopyToAsync(memoryStream);
        return Convert.ToBase64String(memoryStream.ToArray());
    }

    private async Task SaveImageToLocalStorage(string base64Image, string fileName)
    {
        var bytes = Convert.FromBase64String(base64Image);
        var filePath = Path.Combine(FileSystem.AppDataDirectory, fileName);
        await File.WriteAllBytesAsync(filePath, bytes);
    }

    private async Task SaveImage()
    {
        try
        {
            Console.WriteLine("saving!");
            if (!string.IsNullOrEmpty(base64Image))
            {
                string fileName = "savedImage.png"; // You can customize the file name
                await SaveImageToLocalStorage(base64Image, fileName);
                savedImagePath = Path.Combine(FileSystem.AppDataDirectory, fileName);
                Console.WriteLine("image should be saved now");
            }
        }catch(Exception ex)
        {
            Console.WriteLine("cant save image---> " + ex.Message);
        }
    }

    private async Task LoadImageFromStorage()
    {
        Console.WriteLine("in loading image method!");
        if (!string.IsNullOrEmpty(savedImagePath) && File.Exists(savedImagePath))
        {
            Console.WriteLine("The path exists it seems!!");
            byte[] imageBytes = await File.ReadAllBytesAsync(savedImagePath);
            base64LoadedImage = Convert.ToBase64String(imageBytes);
        }
    }
}
